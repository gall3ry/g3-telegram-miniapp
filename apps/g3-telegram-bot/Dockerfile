# This file is generated by Nx.
#
# Build the docker image with `npx nx docker-build g3-telegram-bot`.
# Tip: Modify "docker-build" options in project.json to change docker build args.
#
# Run the container with `docker run --env-file ./apps/g3-telegram-bot/.env.local -p 3000:3000 -t g3-telegram-bot`.
FROM docker.io/node:lts-alpine

# Install Python, pip, and build tools
RUN apk add --update --no-cache python3 py3-pip build-base && \
    if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \
    if [ ! -e /usr/bin/pip ]; then ln -sf pip3 /usr/bin/pip ; fi

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

ENV HOST=0.0.0.0
ENV PORT=3000

WORKDIR /app

RUN addgroup --system g3-telegram-bot && \
    adduser --system -G g3-telegram-bot g3-telegram-bot

COPY dist/apps/g3-telegram-bot g3-telegram-bot/
COPY packages/shared/database-schema/prisma g3-telegram-bot/prisma/
RUN chown -R g3-telegram-bot:g3-telegram-bot .

WORKDIR /app/g3-telegram-bot
RUN pnpx prisma generate --schema prisma/schema.prisma
RUN pnpm install

EXPOSE 3000

CMD [ "node", "./main.js" ]